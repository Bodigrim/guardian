name: Build & Test

on: 
  pull_request: 
    branches: ['**']
  push:
    branches: [main]
    tags:
    - "v*"
  workflow_dispatch:
    inputs:
      macOS:
        description: "Builds macOS binaries"
        type: boolean
        required: true
        default: false
      release_tag:
        description: "Release Tag"
        type: string
        required: false
        default: ""

jobs:
  fourmolu:
    name: Fourmolu
    runs-on: ubuntu-latest
    steps:
      # Note that you must checkout your code before running fourmolu/fourmolu-action
      - uses: actions/checkout@v2
      - uses: fourmolu/fourmolu-action@v6
        with:
          pattern: |
            src/**/*.hs
            src/**/*.hs-boot
            src/**/*.lhs
            app/**/*.hs
            app/**/*.hs-boot
            app/**/*.lhs
            test/**/*.hs
            test/**/*.hs-boot
            test/**/*.lhs

  cabal-check:
    name: Cabal Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Workaround runner image issue
      if: ${{ runner.os == 'Linux' }}
      # https://github.com/actions/runner-images/issues/7061
      run: sudo chown -R "${USER}" /usr/local/.ghcup
    - uses: haskell/actions/setup@v2
      with:
        cabal-version: 3.8.1.0
        ghc-version: 9.0.2
    - run: cabal check

  build-macOS:
    name: Build (macOS)
    runs-on: macOS-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      uses: ./.github/actions/build

  build-linux:
    name: Build (Linux)
    container:
      image: fpco/alpine-haskell-stack:9.2.5
    runs-on: ubuntu-latest
    steps:
    - name: Setup envvars
      run: |
        echo "${HOME}/.local/bin" >> "${GITHUB_PATH}"
        echo "${HOME}/.cabal/bin" >> "${GITHUB_PATH}"
        echo "${HOME}/.ghcup/bin" >> "${GITHUB_PATH}"
    - name: "Installs missing deps"
      run: apk add sudo tar zstd xz
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      uses: ./.github/actions/build

  test-macOS:
    name: Test (macOS)
    needs: [build-macOS]
    strategy:
      fail-fast: false
      matrix:
        os: [macOS]
        ghc: [9.0.2]
    env:
      cabal: "cabal --project-file=cabal-${{ matrix.os }}.project"
      artifact-name: "bins-macOS"
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      id: download
      with:
        name: ${{ env.artifact-name }}
    - uses: haskell/actions/setup@v2
      with:
        ghc-version: 9.0.2
        cabal-version: 3.8.1.0
        stack-version: 2.9.3
    - name: Setup permission
      run: 'chmod +x "${{steps.download.outputs.download-path}}/guardian-test"'
    - name: Installs test tool dependencies
      run: |
        brew install pkg-config
        cabal install graphmod
    - name: Run tests
      run: |
        ${{steps.download.outputs.download-path}}/guardian-test

  test-linux:
    name: Test (Linux)
    needs: [build-linux]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        ghc: [9.0.2]
    env:
      artifact-name: "bins-Linux"
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      id: download
      with:
        name: ${{ env.artifact-name }}
    - name: Setup permission
      run: 'chmod +x "${{steps.download.outputs.download-path}}/guardian-test"'
    - name: Workaround runner image issue
      if: ${{ runner.os == 'Linux' }}
      # https://github.com/actions/runner-images/issues/7061
      run: sudo chown -R "${USER}" /usr/local/.ghcup
    - uses: haskell/actions/setup@v2
      with:
        ghc-version: 9.0.2
        cabal-version: 3.8.1.0
        stack-version: 2.9.3
    - name: Installs test tool dependencies
      run: |
        cabal install graphmod
        mkdir -p ~/.local/bin
        echo "${HOME}/.local/bin" >> "${GITHUB_PATH}"
        curl --location 'https://github.com/haskell-hvr/cabal-plan/releases/download/v0.6.2.0/cabal-plan-0.6.2.0-x86_64-linux.xz' | unxz > ~/.local/bin/cabal-plan
        chmod +x ~/.local/bin/cabal-plan
    - name: Run tests
      run: |
        ${{steps.download.outputs.download-path}}/guardian-test

  release:
    name: Release
    env:
      ghc: 9.0.2
      tag: "${{ github.event.inputs.release_tag }}"
    runs-on: ubuntu-latest
    needs: [build-linux, build-macOS]
    if: >
      github.event_name == 'push'
      &&
      startsWith(github.ref, 'refs/tags/v')
      ||
      github.event_name == 'workflow_dispatch'
      &&
      github.event.inputs.release_tag != ''
    permissions:
      contents: write
    steps:
    - name: Setup envvars
      run: |
        if [ -n "${{env.tag}}" ]; then
          echo 'RELEASE=${{env.tag}}' >> "${GITHUB_ENV}"
        else
          RELEASE=$(echo ${{github.ref_name}} | sed 's/^v//')
          echo "RELEASE=${RELEASE}" >> "${GITHUB_ENV}"
        fi
    - name: Checkout
      uses: actions/checkout@v3
    - name: Workaround runner image issue
      if: ${{ runner.os == 'Linux' }}
      # https://github.com/actions/runner-images/issues/7061
      run: sudo chown -R $USER /usr/local/.ghcup
    - name: Setup Haskell
      uses: haskell/actions/setup@v2
      with:
        ghc-version: '9.0.2'
        cabal-version: "3.8.1.0"
        enable-stack: false
    - name: Check version
      continue-on-error: false
      run: |
        ./scripts/check-version.sh "${RELEASE}"
    - name: Download Artifact(s)
      id: download
      uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}/artifacts
    - name: Make Release on GitHub
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./scripts/make-release.sh "${RELEASE}" "${{ steps.download.outputs.download-path }}"
    - name: Creates Tarball
      run: cabal sdist
    - name: Upload to Hackage
      uses: haskell-actions/hackage-publish@v1
      with:
        hackageToken: ${{ secrets.HACKAGE_ACCESS_TOKEN }}
        publish: false
        packagesPath: dist-newstyle/sdist

